% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quantforesterror.R
\name{quantForestError}
\alias{quantForestError}
\title{Quantify random forest prediction error}
\usage{
quantForestError(forest, X.train, X.test, Y.train = NULL,
  what = c("mspe", "interval", "cons.interval", "p.error", "q.error"),
  alpha = 0.05, rcpp = TRUE)
}
\arguments{
\item{forest}{The random forest object being used for prediction.}

\item{X.train}{A \code{matrix} or \code{data.frame} with the observations
that were used to train \code{forest}; each row should be an observation,
and each column should be a predictor variable.}

\item{X.test}{A \code{matrix} or \code{data.frame} with the observations to
be predicted; each row should be an observation, and each column should be
a predictor variable.}

\item{Y.train}{A vector of the responses of the observations that were used
to train \code{forest}. Required if \code{forest} was created using
the \code{ranger} package, but not if \code{forest} was created using the
\code{randomForest} package or the \code{randomForestSRC} package.}

\item{what}{A vector of characters indicating what outputs are desired.
Possible options are conditional mean squared prediction error estimates
(\code{"mspe"}), conditional prediction intervals (\code{"interval"}),
conservative conditional prediction intervals (\code{"cons.interval"}),
the conditional error distribution functions (\code{"p.error"}),
and the conditional quantile functions (\code{"q.error"}).}

\item{alpha}{The type-I error rate desired for the conditional prediction
intervals; required if \code{"interval"} or \code{"cons.interval"} are
included in \code{what}.}

\item{rcpp}{A \code{logical} indicating whether the weights should be
computed in \code{C++} using the \code{Rcpp} package for reduced runtime.
Recommended especially when the number of training observations, test
observations, or trees is large. Defaults to \code{TRUE}.}
}
\value{
A dataframe with one or more of the following columns, as described
  in the details section:

  \item{pred}{The random forest predictions of the test observations}
  \item{error}{The estimated conditional mean square prediction errors of
  the random forest predictions}
  \item{lower}{The estimated lower bounds of the conditional prediction
  intervals for the test observations}
  \item{upper}{The estimated upper bounds of the conditional prediction
  intervals for the test observations}
  \item{lowerCons}{The conservatively estimated lower bounds of the
  conditional prediction intervals for the test observations}
  \item{upperCons}{The conservatively estimated upper bounds of the
  conditional prediction intervals for the test observations}

  In addition, one or both of the following functions, as described in the
  details section:

  \item{perror}{The empirical cumulative distribution functions of the
  conditional error distributions associated with the test predictions}
  \item{qerror}{The empirical quantile functions of the conditional error
  distributions associated with the test predictions}
}
\description{
Estimates the conditional mean squared prediction errors, conditional
prediction intervals, and conditional error distributions of random forest
predictions.
}
\details{
When training the random forest using \code{randomForest}, \code{ranger} or
\code{quantregForest}, \code{keep.inbag} must be set to \code{TRUE}. When
training the random forest using \code{randomForestSRC}, \code{membership}
must be set to \code{TRUE}.

The random forest predictions are always returned as a dataframe. Additional
columns are included in the dataframe depending on the user's selections in
the argument \code{what}. In particular, including \code{"mspe"} in \code{what}
will add an additional column with the conditional mean squared prediction
error of each test prediction to the dataframe; including \code{"interval"} in
\code{what} will add to the dataframe two additional columns with the lower
and upper bounds of a conditional prediction interval for each test
prediction; and including \code{"cons.interval"} will add to the dataframe
two additional columns with the lower and upper bounds of a conservative
prediction interval for each test prediction. Conservative prediction
intervals are generated by breaking ties in the empirical error distribution
conservatively. They may be desirable when the number of observations is
small.

If \code{"p.error"} or \code{"q.error"} is included in \code{what}, then a
list will be returned as output. The first element of the list, named
\code{"estimates"}, is the dataframe described in the above paragraph. The
other one or two elements of the list are the empirical CDFs (\code{perror})
and/or the empirical quantile functions (\code{qerror}) of the conditional
error distributions associated with the test predictions.
}
\examples{
\donttest{
# load data
data(airquality)

# remove observations with missing predictor variable values
airquality <- airquality[complete.cases(airquality), ]

# get number of observations and the response column index
n <- nrow(airquality)
response.col <- 1

# split data into training and test sets
train.ind <- sample(1:n, n * 0.9, replace = FALSE)
Xtrain <- airquality[train.ind, -response.col]
Ytrain <- airquality[train.ind, response.col]
Xtest <- airquality[-train.ind, -response.col]
Ytest <- airquality[-train.ind, response.col]

# fit random forest to the training data
rf <- randomForest(Xtrain, Ytrain, nodesize = 10,
                   ntree = 500, keep.inbag = TRUE)

# get conditional mean squared prediction errors, prediction
# intervals, and empirical error distribution functions for
# the test observations
test.preds <- quantForestError(rf, Xtrain, Xtest)

# get just the conditional mean squared prediction errors
# and prediction intervals for the test observations
test.preds <- quantForestError(rf, Xtrain, Xtest,
                               what = c("mspe", "interval",
                                        "cons.interval"))

# get just the conditional empirical error distribution
# functions for the test observations
test.preds <- quantForestError(rf, Xtrain, Xtest,
                               what = c("p.error", "q.error"))
}

}
\seealso{
\code{\link{perror}}, \code{\link{qerror}}
}
\author{
Benjamin Lu \code{<b.lu@berkeley.edu>}; Johanna Hardin \code{<jo.hardin@pomona.edu>}
}
